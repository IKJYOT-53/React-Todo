{"version":3,"sources":["Todo.js","ToDoList.js","App.js","index.js"],"names":["Todo","todo","toggleTodo","type","checked","complete","onChange","id","name","ToDoList","todos","map","local_key","App","useState","setTodos","todoNameRef","useRef","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","newTodos","find","ref","text","onClick","e","current","value","prevTodos","uuidv4","filter","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iLAEe,SAASA,EAAT,GAAsC,IAAtBC,EAAqB,EAArBA,KAAOC,EAAc,EAAdA,WAIlC,OACI,8BACI,kCACA,uBAAOC,KAAK,WAAWC,QAASH,EAAKI,SAAWC,SANxD,WACIJ,EAAWD,EAAKM,OAMXN,EAAKO,UCRH,SAASC,EAAT,GAAyC,IAAtBC,EAAqB,EAArBA,MAAOR,EAAc,EAAdA,WACrC,OACIQ,EAAMC,KAAK,SAAAV,GACP,OAAO,cAACD,EAAD,CAAoBE,WAAYA,EAAYD,KAAMA,GAAvCA,EAAKM,O,oBCF7BK,EAAY,gBAgDHC,MA9Cf,WACE,MAAyBC,mBAAS,IAAlC,mBAAOJ,EAAP,KAAaK,EAAb,KACMC,EAAcC,mBAiCpB,OA9BAC,qBAAU,WACR,IAAMC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQX,IACjDO,GAAaJ,EAASI,KACzB,IACFD,qBAAU,WACRI,aAAaE,QAAQZ,EAAUQ,KAAKK,UAAUf,MAC9C,CAACA,IAyBD,qCACA,cAACD,EAAD,CAAUC,MAAOA,EAAOR,WAxB1B,SAAoBK,GAClB,IAAMmB,EAAS,YAAIhB,GACbT,EAAOyB,EAASC,MAAK,SAAA1B,GAAI,OAAGA,EAAKM,KAAOA,KAC9CN,EAAKI,UAAUJ,EAAKI,SACpBU,EAASW,MAqBT,uBAAOE,IAAKZ,EAAaa,KAAK,KAC9B,wBAAQC,QAlBV,SAAoBC,GAClB,IAAMvB,EAAMQ,EAAYgB,QAAQC,MACpB,KAATzB,IACHO,GAAS,SAAAmB,GACP,MAAM,GAAN,mBAAWA,GAAX,CAAqB,CAAC3B,GAAG4B,MAAS3B,KAAKA,EAAKH,UAAS,QAEvDW,EAAYgB,QAAQC,MAAM,KAY1B,sBACA,wBAAQH,QAVV,WACE,IAAMJ,EAAWhB,EAAM0B,QAAO,SAAAnC,GAAI,OAAKA,EAAKI,YAC5CU,EAASW,IAQT,mCACA,gCAAMhB,EAAM0B,QAAO,SAAAnC,GAAI,OAAIA,EAAKI,YAAUgC,OAA1C,0BC1CJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fe68da75.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Todo({ todo , toggleTodo }) {\n    function handleTodoClick(){\n        toggleTodo(todo.id)\n    }\n    return (\n        <div>\n            <label>\n            <input type=\"checkbox\" checked={todo.complete}  onChange={handleTodoClick} />\n            {todo.name}\n            </label>\n        </div>\n    )\n}\n","import React from 'react'\nimport Todo from './Todo'\nexport default function ToDoList({todos, toggleTodo }) {\n    return (\n        todos.map( todo =>{\n            return <Todo key={todo.id} toggleTodo={toggleTodo} todo={todo} />\n        })\n    )\n}\n","import React,{useState,useRef,useEffect} from 'react'\nimport ToDoList from \"./ToDoList\"\nimport uuidv4 from '../node_modules/uuid/dist/v4'\nconst local_key = 'todoapp.todos'\n\nfunction App() {\n  const [todos,setTodos] = useState([])\n  const todoNameRef = useRef()\n  \n  //storing todo list on local memory\n  useEffect(()=>{\n    const storedTodos = JSON.parse(localStorage.getItem(local_key))\n    if(storedTodos) setTodos(storedTodos)\n  },[])\n  useEffect(()=>{\n    localStorage.setItem(local_key,JSON.stringify(todos))\n  },[todos])\n  \n  function toggleTodo(id){\n    const newTodos=[...todos]\n    const todo = newTodos.find(todo =>todo.id === id)\n    todo.complete=!todo.complete\n    setTodos(newTodos)\n  }\n\n//put value of todo on button press\n  function handleToDo(e){\n    const name =todoNameRef.current.value \n    if(name === '') return\n    setTodos(prevTodos =>{\n      return [...prevTodos,{id:uuidv4(),name:name,complete:false}]\n    })\n    todoNameRef.current.value=''\n  }\n  //clear todos\n  function handleClear(){\n    const newTodos = todos.filter(todo => !todo.complete)\n    setTodos(newTodos)\n  }\n  //main return function\n  return (\n    <>\n    <ToDoList todos={todos} toggleTodo={toggleTodo} />\n    <input ref={todoNameRef} text=\"\" />\n    <button onClick={handleToDo}>Add Todo</button>\n    <button onClick={handleClear}>Clear completed tasks</button>\n    <div>{todos.filter(todo => todo.complete).length} tasks completed</div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}